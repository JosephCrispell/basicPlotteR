from <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[6]))
to <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[7]))
position <- plotLocations[[paste0(from, "-to-", to)]] + c(-0.25, 0.25)[replicate]
# Check if varying or equal populations
varying <- TRUE
if(parts[2] == "equal"){
varying <- FALSE
position <- position - 0.1
}else{
position <- position + 0.1
}
# Plot the a summary of the distribution
points(x=c(position, position), y=c(lowers[index], uppers[index]), type="l", lwd=2,
col=ifelse(varying, "grey", "black"))
points(x=position, y=medians[index], pch=19)
}
# Create an empty plot
plot(x=NULL, y=NULL, ylim=c(0, max(uppers)), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="")
# Add the X axis labels
labels <- c("badger-to-cattle", "cattle-to-badger", "badger-to-cattle", "cattle-to-badger",
"NI-to-Cumbria")
axis(side=1, at=1:5, labels=labels)
axis(side=1, at=c(1.5, 3.5), labels=c("Cumbria", "Northern Ireland (NI)"), tick=FALSE, line=2)
# Loop through each analysis
for(index in seq_along(names)){
# Get the location on the X axis for the current analysis
parts <- strsplit(names[index], split="_")[[1]]
replicate <- as.numeric(parts[4])
from <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[6]))
to <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[7]))
position <- plotLocations[[paste0(from, "-to-", to)]] + c(-0.15, 0.15)[replicate]
# Check if varying or equal populations
varying <- TRUE
if(parts[2] == "equal"){
varying <- FALSE
position <- position - 0.1
}else{
position <- position + 0.1
}
# Plot the a summary of the distribution
points(x=c(position, position), y=c(lowers[index], uppers[index]), type="l", lwd=2,
col=ifelse(varying, "grey", "black"))
points(x=position, y=medians[index], pch=19)
}
plotLocations <- list("badgerCumbria-to-cowCumbria_equal_1"=0.75,
"badgerCumbria-to-cowCumbria_equal_2"=0.85,
"badgerCumbria-to-cowCumbria_varying_1"=1.25,
"badgerCumbria-to-cowCumbria_varying_2"=1.15,
"cowCumbria-to-badgerCumbria_equal_1"=1.75,
"cowCumbria-to-badgerCumbria_equal_2"=1.85,
"cowCumbria-to-badgerCumbria_varying_1"=2.25,
"cowCumbria-to-badgerCumbria_varying_2"=2.15,
"badgerTVR-to-cowTVR_equal_1"=2.75,
"badgerTVR-to-cowTVR_equal_2"=2.85,
"badgerTVR-to-cowTVR_varying_1"=2.25,
"badgerTVR-to-cowTVR_varying_2"=2.15,
"cowTVR-to-badgerTVR_equal_1"=3.75,
"cowTVR-to-badgerTVR_equal_2"=3.85,
"cowTVR-to-badgerTVR_varying_1"=4.25,
"cowTVR-to-badgerTVR_varying_2"=4.15,
"cowTVR-to-cowCumbria_equal_1"=4.75,
"cowTVR-to-cowCumbria_equal_2"=4.85,
"cowTVR-to-cowCumbria_varying_1"=5.25,
"cowTVR-to-cowCumbria_varying_2"=5.15)
# Note the locations of the bars
plotLocations <- list("badgerCumbria-to-cowCumbria_equal_1"=0.75,
"badgerCumbria-to-cowCumbria_equal_2"=0.85,
"badgerCumbria-to-cowCumbria_varying_1"=1.25,
"badgerCumbria-to-cowCumbria_varying_2"=1.15,
"cowCumbria-to-badgerCumbria_equal_1"=1.75,
"cowCumbria-to-badgerCumbria_equal_2"=1.85,
"cowCumbria-to-badgerCumbria_varying_1"=2.25,
"cowCumbria-to-badgerCumbria_varying_2"=2.15,
"badgerTVR-to-cowTVR_equal_1"=2.75,
"badgerTVR-to-cowTVR_equal_2"=2.85,
"badgerTVR-to-cowTVR_varying_1"=2.25,
"badgerTVR-to-cowTVR_varying_2"=2.15,
"cowTVR-to-badgerTVR_equal_1"=3.75,
"cowTVR-to-badgerTVR_equal_2"=3.85,
"cowTVR-to-badgerTVR_varying_1"=4.25,
"cowTVR-to-badgerTVR_varying_2"=4.15,
"cowTVR-to-cowCumbria_equal_1"=4.75,
"cowTVR-to-cowCumbria_equal_2"=4.85,
"cowTVR-to-cowCumbria_varying_1"=5.25,
"cowTVR-to-cowCumbria_varying_2"=5.15)
# Create an empty plot
plot(x=NULL, y=NULL, ylim=c(0, max(uppers)), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="")
# Add the X axis labels
labels <- c("badger-to-cattle", "cattle-to-badger", "badger-to-cattle", "cattle-to-badger",
"NI-to-Cumbria")
axis(side=1, at=1:5, labels=labels)
axis(side=1, at=c(1.5, 3.5), labels=c("Cumbria", "Northern Ireland (NI)"), tick=FALSE, line=2)
# Loop through each analysis
for(index in seq_along(names)){
# Get the location on the X axis for the current analysis
parts <- strsplit(names[index], split="_")[[1]]
replicate <- as.numeric(parts[4])
from <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[6]))
to <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[7]))
position <- plotLocations[[paste0(from, "-to-", to, "_", parts[2], "_", replicate)]]
# Plot the a summary of the distribution
points(x=c(position, position), y=c(lowers[index], uppers[index]), type="l", lwd=2,
col=ifelse(parts[2] == "varying", "grey", "black"))
points(x=position, y=medians[index], pch=19)
}
plotLocations <- list("badgerCumbria-to-cowCumbria_equal_1"=0.75,
"badgerCumbria-to-cowCumbria_equal_2"=0.85,
"badgerCumbria-to-cowCumbria_varying_1"=1.25,
"badgerCumbria-to-cowCumbria_varying_2"=1.15,
"cowCumbria-to-badgerCumbria_equal_1"=1.75,
"cowCumbria-to-badgerCumbria_equal_2"=1.85,
"cowCumbria-to-badgerCumbria_varying_1"=2.25,
"cowCumbria-to-badgerCumbria_varying_2"=2.15,
"badgerTVR-to-cowTVR_equal_1"=2.75,
"badgerTVR-to-cowTVR_equal_2"=2.85,
"badgerTVR-to-cowTVR_varying_1"=3.25,
"badgerTVR-to-cowTVR_varying_2"=3.15,
"cowTVR-to-badgerTVR_equal_1"=3.75,
"cowTVR-to-badgerTVR_equal_2"=3.85,
"cowTVR-to-badgerTVR_varying_1"=4.25,
"cowTVR-to-badgerTVR_varying_2"=4.15,
"cowTVR-to-cowCumbria_equal_1"=4.75,
"cowTVR-to-cowCumbria_equal_2"=4.85,
"cowTVR-to-cowCumbria_varying_1"=5.25,
"cowTVR-to-cowCumbria_varying_2"=5.15)
# Create an empty plot
plot(x=NULL, y=NULL, ylim=c(0, max(uppers)), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="")
# Add the X axis labels
labels <- c("badger-to-cattle", "cattle-to-badger", "badger-to-cattle", "cattle-to-badger",
"NI-to-Cumbria")
axis(side=1, at=1:5, labels=labels)
axis(side=1, at=c(1.5, 3.5), labels=c("Cumbria", "Northern Ireland (NI)"), tick=FALSE, line=2)
# Loop through each analysis
for(index in seq_along(names)){
# Get the location on the X axis for the current analysis
parts <- strsplit(names[index], split="_")[[1]]
replicate <- as.numeric(parts[4])
from <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[6]))
to <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[7]))
position <- plotLocations[[paste0(from, "-to-", to, "_", parts[2], "_", replicate)]]
# Plot the a summary of the distribution
points(x=c(position, position), y=c(lowers[index], uppers[index]), type="l", lwd=2,
col=ifelse(parts[2] == "varying", "grey", "black"))
points(x=position, y=medians[index], pch=19)
}
# Note the locations of the bars
plotLocations <- list("badgerCumbria-to-cowCumbria_equal_1"=0.85,
"badgerCumbria-to-cowCumbria_equal_2"=0.95,
"badgerCumbria-to-cowCumbria_varying_1"=1.05,
"badgerCumbria-to-cowCumbria_varying_2"=1.15,
"cowCumbria-to-badgerCumbria_equal_1"=1.85,
"cowCumbria-to-badgerCumbria_equal_2"=1.95,
"cowCumbria-to-badgerCumbria_varying_1"=2.05,
"cowCumbria-to-badgerCumbria_varying_2"=2.15,
"badgerTVR-to-cowTVR_equal_1"=2.85,
"badgerTVR-to-cowTVR_equal_2"=2.95,
"badgerTVR-to-cowTVR_varying_1"=3.05,
"badgerTVR-to-cowTVR_varying_2"=3.15,
"cowTVR-to-badgerTVR_equal_1"=3.85,
"cowTVR-to-badgerTVR_equal_2"=3.95,
"cowTVR-to-badgerTVR_varying_1"=4.05,
"cowTVR-to-badgerTVR_varying_2"=4.15,
"cowTVR-to-cowCumbria_equal_1"=4.85,
"cowTVR-to-cowCumbria_equal_2"=4.95,
"cowTVR-to-cowCumbria_varying_1"=5.05,
"cowTVR-to-cowCumbria_varying_2"=5.15)
# Create an empty plot
plot(x=NULL, y=NULL, ylim=c(0, max(uppers)), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="")
# Add the X axis labels
labels <- c("badger-to-cattle", "cattle-to-badger", "badger-to-cattle", "cattle-to-badger",
"NI-to-Cumbria")
axis(side=1, at=1:5, labels=labels)
axis(side=1, at=c(1.5, 3.5), labels=c("Cumbria", "Northern Ireland (NI)"), tick=FALSE, line=2)
# Loop through each analysis
for(index in seq_along(names)){
# Get the location on the X axis for the current analysis
parts <- strsplit(names[index], split="_")[[1]]
replicate <- as.numeric(parts[4])
from <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[6]))
to <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[7]))
position <- plotLocations[[paste0(from, "-to-", to, "_", parts[2], "_", replicate)]]
# Plot the a summary of the distribution
points(x=c(position, position), y=c(lowers[index], uppers[index]), type="l", lwd=2,
col=ifelse(parts[2] == "varying", "grey", "black"))
points(x=position, y=medians[index], pch=19)
}
# Note the locations of the bars
plotLocations <- list("badgerCumbria-to-cowCumbria_equal_1"=0.85,
"badgerCumbria-to-cowCumbria_equal_2"=0.95,
"badgerCumbria-to-cowCumbria_varying_1"=1.05,
"badgerCumbria-to-cowCumbria_varying_2"=1.15,
"cowCumbria-to-badgerCumbria_equal_1"=1.85,
"cowCumbria-to-badgerCumbria_equal_2"=1.95,
"cowCumbria-to-badgerCumbria_varying_1"=2.05,
"cowCumbria-to-badgerCumbria_varying_2"=2.15,
"badgerTVR-to-cowTVR_equal_1"=2.85,
"badgerTVR-to-cowTVR_equal_2"=2.95,
"badgerTVR-to-cowTVR_varying_1"=3.05,
"badgerTVR-to-cowTVR_varying_2"=3.15,
"cowTVR-to-badgerTVR_equal_1"=3.85,
"cowTVR-to-badgerTVR_equal_2"=3.95,
"cowTVR-to-badgerTVR_varying_1"=4.05,
"cowTVR-to-badgerTVR_varying_2"=4.15,
"cowTVR-to-cowCumbria_equal_1"=4.85,
"cowTVR-to-cowCumbria_equal_2"=4.95,
"cowTVR-to-cowCumbria_varying_1"=5.05,
"cowTVR-to-cowCumbria_varying_2"=5.15)
# Create an empty plot
plot(x=NULL, y=NULL, ylim=c(0, 0.25), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="")
# Add the X axis labels
labels <- c("badger-to-cattle", "cattle-to-badger", "badger-to-cattle", "cattle-to-badger",
"NI-to-Cumbria")
axis(side=1, at=1:5, labels=labels)
axis(side=1, at=c(1.5, 3.5), labels=c("Cumbria", "Northern Ireland (NI)"), tick=FALSE, line=2)
# Loop through each analysis
for(index in seq_along(names)){
# Get the location on the X axis for the current analysis
parts <- strsplit(names[index], split="_")[[1]]
replicate <- as.numeric(parts[4])
from <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[6]))
to <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[7]))
position <- plotLocations[[paste0(from, "-to-", to, "_", parts[2], "_", replicate)]]
# Plot the a summary of the distribution
points(x=c(position, position), y=c(lowers[index], uppers[index]), type="l", lwd=2,
col=ifelse(parts[2] == "varying", "grey", "black"))
points(x=position, y=medians[index], pch=19)
}
log(0)
log(0.00001)
log(0.5)
plotLocations <- list("badgerCumbria-to-cowCumbria_equal_1"=0.85,
"badgerCumbria-to-cowCumbria_equal_2"=0.95,
"badgerCumbria-to-cowCumbria_varying_1"=1.05,
"badgerCumbria-to-cowCumbria_varying_2"=1.15,
"cowCumbria-to-badgerCumbria_equal_1"=1.85,
"cowCumbria-to-badgerCumbria_equal_2"=1.95,
"cowCumbria-to-badgerCumbria_varying_1"=2.05,
"cowCumbria-to-badgerCumbria_varying_2"=2.15,
"badgerTVR-to-cowTVR_equal_1"=2.85,
"badgerTVR-to-cowTVR_equal_2"=2.95,
"badgerTVR-to-cowTVR_varying_1"=3.05,
"badgerTVR-to-cowTVR_varying_2"=3.15,
"cowTVR-to-badgerTVR_equal_1"=3.85,
"cowTVR-to-badgerTVR_equal_2"=3.95,
"cowTVR-to-badgerTVR_varying_1"=4.05,
"cowTVR-to-badgerTVR_varying_2"=4.15,
"cowTVR-to-cowCumbria_equal_1"=4.85,
"cowTVR-to-cowCumbria_equal_2"=4.95,
"cowTVR-to-cowCumbria_varying_1"=5.05,
"cowTVR-to-cowCumbria_varying_2"=5.15)
# Create an empty plot
plot(x=NULL, y=NULL, ylim=c(0, log(max(uppers))), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
# Add the X axis labels
labels <- c("badger-to-cattle", "cattle-to-badger", "badger-to-cattle", "cattle-to-badger",
"NI-to-Cumbria")
axis(side=1, at=1:5, labels=labels)
axis(side=1, at=c(1.5, 3.5), labels=c("Cumbria", "Northern Ireland (NI)"), tick=FALSE, line=2)
# Loop through each analysis
for(index in seq_along(names)){
# Get the location on the X axis for the current analysis
parts <- strsplit(names[index], split="_")[[1]]
replicate <- as.numeric(parts[4])
from <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[6]))
to <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[7]))
position <- plotLocations[[paste0(from, "-to-", to, "_", parts[2], "_", replicate)]]
# Plot the a summary of the distribution
points(x=c(position, position), y=log(c(lowers[index], uppers[index])), type="l", lwd=2,
col=ifelse(parts[2] == "varying", "grey", "black"))
points(x=position, y=log(medians[index]), pch=19)
}
# Create an empty plot
plot(x=NULL, y=NULL, ylim=c(-1, log(max(uppers))), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
# Add the X axis labels
labels <- c("badger-to-cattle", "cattle-to-badger", "badger-to-cattle", "cattle-to-badger",
"NI-to-Cumbria")
axis(side=1, at=1:5, labels=labels)
axis(side=1, at=c(1.5, 3.5), labels=c("Cumbria", "Northern Ireland (NI)"), tick=FALSE, line=2)
# Loop through each analysis
for(index in seq_along(names)){
# Get the location on the X axis for the current analysis
parts <- strsplit(names[index], split="_")[[1]]
replicate <- as.numeric(parts[4])
from <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[6]))
to <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[7]))
position <- plotLocations[[paste0(from, "-to-", to, "_", parts[2], "_", replicate)]]
# Plot the a summary of the distribution
points(x=c(position, position), y=log(c(lowers[index], uppers[index])), type="l", lwd=2,
col=ifelse(parts[2] == "varying", "grey", "black"))
points(x=position, y=log(medians[index]), pch=19)
}
plotLocations <- list("badgerCumbria-to-cowCumbria_equal_1"=0.85,
"badgerCumbria-to-cowCumbria_equal_2"=0.95,
"badgerCumbria-to-cowCumbria_varying_1"=1.05,
"badgerCumbria-to-cowCumbria_varying_2"=1.15,
"cowCumbria-to-badgerCumbria_equal_1"=1.85,
"cowCumbria-to-badgerCumbria_equal_2"=1.95,
"cowCumbria-to-badgerCumbria_varying_1"=2.05,
"cowCumbria-to-badgerCumbria_varying_2"=2.15,
"badgerTVR-to-cowTVR_equal_1"=2.85,
"badgerTVR-to-cowTVR_equal_2"=2.95,
"badgerTVR-to-cowTVR_varying_1"=3.05,
"badgerTVR-to-cowTVR_varying_2"=3.15,
"cowTVR-to-badgerTVR_equal_1"=3.85,
"cowTVR-to-badgerTVR_equal_2"=3.95,
"cowTVR-to-badgerTVR_varying_1"=4.05,
"cowTVR-to-badgerTVR_varying_2"=4.15,
"cowTVR-to-cowCumbria_equal_1"=4.85,
"cowTVR-to-cowCumbria_equal_2"=4.95,
"cowTVR-to-cowCumbria_varying_1"=5.05,
"cowTVR-to-cowCumbria_varying_2"=5.15)
# Create an empty plot
plot(x=NULL, y=NULL, ylim=range(log(c(lowers, uppers))), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the X axis labels
labels <- c("badger-to-cattle", "cattle-to-badger", "badger-to-cattle", "cattle-to-badger",
"NI-to-Cumbria")
axis(side=1, at=1:5, labels=labels)
axis(side=1, at=c(1.5, 3.5), labels=c("Cumbria", "Northern Ireland (NI)"), tick=FALSE, line=2)
# Loop through each analysis
for(index in seq_along(names)){
# Get the location on the X axis for the current analysis
parts <- strsplit(names[index], split="_")[[1]]
replicate <- as.numeric(parts[4])
from <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[6]))
to <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[7]))
position <- plotLocations[[paste0(from, "-to-", to, "_", parts[2], "_", replicate)]]
# Plot the a summary of the distribution
points(x=c(position, position), y=log(c(lowers[index], uppers[index])), type="l", lwd=2,
col=ifelse(parts[2] == "varying", "grey", "black"))
points(x=position, y=log(medians[index]), pch=19)
}
range(log(c(lowers, uppers)))
axis(side=2, at=c(yRange, log(c(0.05, 0.1, 0.5, 1.0, 1.5))))
# Create an empty plot
yRange <- range(log(c(lowers, uppers)))
# Add the Y labels
axis(side=2, at=c(yRange, log(c(0.05, 0.1, 0.5, 1.0, 1.5))))
min(lowers)
yRange <- range(log(c(lowers, uppers)))
plot(x=NULL, y=NULL, ylim=yRange, xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(0.000001, 0.05, 0.1, 0.5, 1.0, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=2))
yRange <- range(log(c(lowers, uppers)))
plot(x=NULL, y=NULL, ylim=yRange, xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(0.000001, 0.05, 0.1, 0.5, 1.0, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=2), las=1)
yRange <- range(log(c(lowers, uppers)))
plot(x=NULL, y=NULL, ylim=yRange, xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(0.000001, 0.01, 0.05, 0.1, 0.5, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=2), las=1)
yRange <- range(log(c(lowers, uppers)))
plot(x=NULL, y=NULL, ylim=yRange, xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(0.000001, 0.01, 0.02, 0.1, 0.5, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=2), las=1)
at <- c(0.000001, 0.005, 0.01, 0.02, 0.1, 0.5, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=2), las=1)
axis(side=2, at=log(at), labels=round(at, digits=2), las=1, xpd=TRUE)
yRange <- range(log(c(lowers, uppers)))
plot(x=NULL, y=NULL, ylim=yRange, xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(yRange[1], 0.005, 0.01, 0.02, 0.1, 0.5, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=2), las=1, xpd=TRUE)
# Add the X axis labels
labels <- c("badger-to-cattle", "cattle-to-badger", "badger-to-cattle", "cattle-to-badger",
"NI-to-Cumbria")
axis(side=1, at=1:5, labels=labels)
axis(side=1, at=c(1.5, 3.5), labels=c("Cumbria", "Northern Ireland (NI)"), tick=FALSE, line=2)
yRange <- range(log(c(lowers, uppers)))
plot(x=NULL, y=NULL, ylim=yRange, xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(yRange[1], 0.01, 0.05, 0.1, 0.5, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=2), las=1, xpd=TRUE)
log(at)
yRange[1]
log(yRange[1])
# Create an empty plot
yRange <- range(c(lowers, uppers))
yRange <- range(c(lowers, uppers))
plot(x=NULL, y=NULL, ylim=log(yRange), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(yRange[1], 0.01, 0.05, 0.1, 0.5, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=2), las=1, xpd=TRUE)
# Add the X axis labels
labels <- c("badger-to-cattle", "cattle-to-badger", "badger-to-cattle", "cattle-to-badger",
"NI-to-Cumbria")
axis(side=1, at=1:5, labels=labels)
axis(side=1, at=c(1.5, 3.5), labels=c("Cumbria", "Northern Ireland (NI)"), tick=FALSE, line=2)
# Loop through each analysis
for(index in seq_along(names)){
# Get the location on the X axis for the current analysis
parts <- strsplit(names[index], split="_")[[1]]
replicate <- as.numeric(parts[4])
from <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[6]))
to <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[7]))
position <- plotLocations[[paste0(from, "-to-", to, "_", parts[2], "_", replicate)]]
# Plot the a summary of the distribution
points(x=c(position, position), y=log(c(lowers[index], uppers[index])), type="l", lwd=2,
col=ifelse(parts[2] == "varying", "grey", "black"))
points(x=position, y=log(medians[index]), pch=19)
}
# Create an empty plot
yRange <- range(c(lowers, uppers))
plot(x=NULL, y=NULL, ylim=log(yRange), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(yRange[1], 0.01, 0.1, 0.2, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=2), las=1, xpd=TRUE)
# Create an empty plot
yRange <- range(c(lowers, uppers))
plot(x=NULL, y=NULL, ylim=log(yRange), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(yRange[1], 0.01, 0.1, 0.25, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=2), las=1, xpd=TRUE)
# Create an empty plot
yRange <- range(c(lowers, uppers))
plot(x=NULL, y=NULL, ylim=log(yRange), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(yRange[1], 0.01, 0.1, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=2), las=1, xpd=TRUE)
# Add the X axis labels
labels <- c("badger-to-cattle", "cattle-to-badger", "badger-to-cattle", "cattle-to-badger",
"NI-to-Cumbria")
axis(side=1, at=1:5, labels=labels)
axis(side=1, at=c(1.5, 3.5), labels=c("Cumbria", "Northern Ireland (NI)"), tick=FALSE, line=2)
# Loop through each analysis
for(index in seq_along(names)){
# Get the location on the X axis for the current analysis
parts <- strsplit(names[index], split="_")[[1]]
replicate <- as.numeric(parts[4])
from <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[6]))
to <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[7]))
position <- plotLocations[[paste0(from, "-to-", to, "_", parts[2], "_", replicate)]]
# Plot the a summary of the distribution
points(x=c(position, position), y=log(c(lowers[index], uppers[index])), type="l", lwd=2,
col=ifelse(parts[2] == "varying", "grey", "black"))
points(x=position, y=log(medians[index]), pch=19)
}
# Create an empty plot
yRange <- range(c(lowers, uppers))
plot(x=NULL, y=NULL, ylim=log(yRange), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(yRange[1], 0.005, 0.01, 0.1, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=3), las=1, xpd=TRUE)
# Create an empty plot
yRange <- range(c(lowers, uppers))
plot(x=NULL, y=NULL, ylim=log(yRange), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(yRange[1], 0.001, 0.01, 0.1, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=3), las=1, xpd=TRUE)
# Create an empty plot
yRange <- range(c(lowers, uppers))
plot(x=NULL, y=NULL, ylim=log(yRange), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(yRange[1], 0.001, 0.01, 0.1, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=3), las=1, xpd=TRUE, line=-0.1)
# Create an empty plot
yRange <- range(c(lowers, uppers))
plot(x=NULL, y=NULL, ylim=log(yRange), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(yRange[1], 0.001, 0.01, 0.1, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=3), las=1, xpd=TRUE, line=-0.2)
# Create an empty plot
yRange <- range(c(lowers, uppers))
plot(x=NULL, y=NULL, ylim=log(yRange), xlim=c(0.5, 5.5), bty="n", las=1,
xaxt="n", ylab="Per lineage transition rate per year", xlab="", yaxt="n")
# Add the Y labels
at <- c(yRange[1], 0.001, 0.01, 0.1, 1.5)
axis(side=2, at=log(at), labels=round(at, digits=3), las=1, xpd=TRUE, line=-0.2)
# Add the X axis labels
labels <- c("badger-to-cattle", "cattle-to-badger", "badger-to-cattle", "cattle-to-badger",
"NI-to-Cumbria")
axis(side=1, at=1:5, labels=labels)
axis(side=1, at=c(1.5, 3.5), labels=c("Cumbria", "Northern Ireland (NI)"), tick=FALSE, line=2)
# Loop through each analysis
for(index in seq_along(names)){
# Get the location on the X axis for the current analysis
parts <- strsplit(names[index], split="_")[[1]]
replicate <- as.numeric(parts[4])
from <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[6]))
to <- getDemeNamesForDemeStructure("4DemeCumbria", as.numeric(parts[7]))
position <- plotLocations[[paste0(from, "-to-", to, "_", parts[2], "_", replicate)]]
# Plot the a summary of the distribution
points(x=c(position, position), y=log(c(lowers[index], uppers[index])), type="l", lwd=2,
col=ifelse(parts[2] == "varying", "grey", "black"))
points(x=position, y=log(medians[index]), pch=19)
}
